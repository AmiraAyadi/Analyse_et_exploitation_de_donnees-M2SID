# -*- coding: utf-8 -*-
"""
Created on Mon Oct 30 13:38:03 2017

@author: Amira AYADI
"""
import numpy as np
import math
import os
import contour as ct
from scipy.misc import imread 
import matplotlib.pyplot as plt

#importer et afficher l'image 
img = imread('51.bmp')
plt.imshow(img, cmap='Greys_r')

#extraire les contours de l'image et l'afficher 
plt.figure()
x,y = ct.contour_tortue(img)
plt.plot(x,y)

def phi(x,y,c):
    phi = []
    for i in range(len(x)):
        phi.append(math.atan((y[i] - y[i-c])/(x[i] - x[i-c] + 0.01)))
    return phi

#fonction de courbure
def courbure(phi):
    f = []
    for i in range(len(phi)):
        f.append(phi[i] - phi[i-1])
    return f

# pour chaque valeur de c, on regarde l'evolution de la courbure
for i in range(10):
    plt.figure()
    plt.title("c="+str(i))
    plt.plot(courbure(phi(x,y,i)))

# On voit bien que c'est à c = 3 que c'est stabilisé

# enfin, pour toutes les images :
images = os.listdir('./Images')
for path in images:
    img = imread('./Images/'+ path, mode = 'L')
    x,y = ct.contour_tortue(img)
    plt.figure()
    plt.title(path)
    plt.plot(courbure(phi(x,y,3)))

